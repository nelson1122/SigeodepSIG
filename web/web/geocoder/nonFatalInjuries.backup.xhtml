<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:h="http://java.sun.com/jsf/html">
    <body>

        <ui:composition template="template.xhtml">

            <ui:define name="indexTitle">
                ANALISIS ESPACIAL LESIONES FATALES
            </ui:define>

            <ui:define name="InactivityLayer">
                <script type="text/javascript">
                    function pageInactive1() {//muestra la pagina deshabilitada                    
                        document.getElementById('IdInactivityLayer').style.display = "block";
                    }
                    function pageActive1() {//muestra la pagina habilitada
                        document.getElementById('IdInactivityLayer').style.display = "none";
                    }
                </script>
                <div class="InactivityLayer" id="IdInactivityLayer"> Procesando...</div>
               
            </ui:define>

            <ui:define name="centerPanel">
                
                <p:toolbar style="margin-top: -3px; margin-bottom: 2px;">
                    <p:toolbarGroup style="margin-top: 6px;">
                        Tipo de mapa:&nbsp; &nbsp;
                    </p:toolbarGroup>
                    <p:toolbarGroup>
                        <p:selectOneButton id="mapSelectionBtn" value="#{injuriesCountMB.mapType}">
                            <f:selectItem itemLabel="Puntos" itemValue="points"/>
                            <f:selectItem itemLabel="HeatMap" itemValue="heatmap" />
                            <p:ajax
                                listener="#{injuriesCountMB.changeInteractionButtonsState}"
                                update= "selectOptionSelected drawOptionSelected resetBtn panelUpdateOverlays"/>
                        </p:selectOneButton>
                    </p:toolbarGroup>
                    <p:toolbarGroup style="margin-top: 6px;">
                        <span class="ui-separator">
                            <span class="ui-icon ui-icon-grip-dotted-vertical" />
                        </span>
                        Zonas de interés:&nbsp; &nbsp;
                    </p:toolbarGroup>
                    <p:toolbarGroup>
                        <p:selectBooleanButton 
                            id="drawOptionSelected" 
                            onLabel="Trazar" 
                            offLabel="Trazar"
                            onchange="drawBox()"
                            value="#{injuriesCountMB.drawOptionSelected}"
                            disabled="#{injuriesCountMB.drawOptionDisabled}">
                            <p:ajax listener="#{injuriesCountMB.drawButtonChange()}" update="selectOptionSelected"/>
                        </p:selectBooleanButton>

                        <p:selectBooleanButton 
                            id="selectOptionSelected" 
                            onLabel="Seleccionar" 
                            offLabel="Seleccionar"
                            onchange="selectFeatures()"
                            value="#{injuriesCountMB.selectOptionSelected}"
                            disabled="#{injuriesCountMB.selectOptionDisabled}">
                            <p:ajax listener="#{injuriesCountMB.selectButtonChange()}" update="drawOptionSelected"/>
                        </p:selectBooleanButton>
                        <p:commandButton 
                            id="resetBtn" 
                            value="Reiniciar" 
                            onclick="clearLayer()"
                            actionListener="#{injuriesCountMB.resetButtonChange()}" 
                            update="selectOptionSelected drawOptionSelected"
                            disabled="#{injuriesCountMB.resetOptionDisabled}" />

                    </p:toolbarGroup>


                </p:toolbar>





                <!-- DIVISION MAPA -->
                <p:outputPanel id="panelMap">
                    <div id="map" style="width: 100%; height: 94%; position: absolute;"></div>
                    <script type="text/javascript">
                        
                        /*
                         * CONFIGURACION CAPA DE VIAS BINGMAPS
                         * @type ol.layer.Tile
                         */
                        var bmapsRoads = new ol.layer.Tile({
                            title: 'BingMaps Roads',
                            source: new ol.source.BingMaps({
                                key: 'AnyGyd4GaAzToU0sDaA0NaXDD88yChcUh8ySoNc32_ddxkrxkl9K5SIATkA8EpMn',
                                imagerySet: 'Road'
                            }),
                            visible: false
                        });

                        /**
                         * CONFIGURACION CAPA SATELITAL BINGMAPS
                         * @type ol.layer.Tile
                         */
                        var bmapsAerial = new ol.layer.Tile({
                            title: 'BingMaps Aerial',
                            source: new ol.source.BingMaps({
                                key: 'AnyGyd4GaAzToU0sDaA0NaXDD88yChcUh8ySoNc32_ddxkrxkl9K5SIATkA8EpMn',
                                imagerySet: 'AerialWithLabels'}),
                            visible: false
                        });

                        /**
                         * CONFIGURACION CAPA DE VIAS OPENSTREETMAPS
                         * @type ol.layer.Tile
                         */
                        var osmLayer = new ol.layer.Tile({
                            title: 'OpenStreetMaps',
                            source: new ol.source.OSM(),
                            visible: true
                        });

                        /**
                         * CONFIGURACION DE LOS GRUPOS DE CAPAS (PARA LAYERSWITCHER)
                         * @type ol.layer.Group
                         */
                        var baseMaps = new ol.layer.Group({
                            title: 'Capas Base',
                            layers: [bmapsRoads, bmapsAerial, osmLayer]
                        });

                        /**
                         * CONFIGURACION DEL CONTENEDOR DE CAPAS
                         * @type ol.Map
                         */
                        var map = new ol.Map({
                            target: 'map', // The DOM element that will contains the map

                            controls: ol.control.defaults({
                                attributionOptions: ({
                                    collapsible: false
                                })
                            }).extend([
                                new ol.control.ZoomToExtent({
                                    extent: [
                                        -8605605, 137132,
                                        -8599605, 132374
                                    ]
                                }),
                                new ol.control.ScaleLine(),
                                //new ol.control.FullScreen(),
                                new ol.control.MousePosition({
                                    coordinateFormat: ol.coordinate.createStringXY(4),
                                    projection: 'EPSG:3857'
                                })
                            ]),
                            renderer: 'canvas', // Force the renderer to be used
                            layers: [baseMaps],
                            // Create a view centered on the specified location and zoom level
                            view: new ol.View({
                                center: [-8602509.5692, 134983.3435],
                                zoom: 14,
                                maxZoom: 18,
                                minZoom: 14
                            })
                        });

                        /**
                         * ADICION DEL CONTROL LAYERSWITCHER
                         * @type ol.control.LayerSwitcher
                         */
                        var layerSwitcher = new ol.control.LayerSwitcher();
                        map.addControl(layerSwitcher);


                        /**
                         * FORZAR RECALCULO DEL TAMAÑO DEL PUERTO DE VISTA (REDIMENSIONAR DIV DEL MAPA)
                         * @returns {undefined}
                         */
                        setInterval(function () {
                            map.updateSize();
                        }, 2);
                        
                        /**
                         * CAPA PARA DIBUJAR AREAS DE INTERÉS
                         * @type ol.layer.Vector
                         */
                        var drawingLayer = new ol.layer.Vector({
                            source: new ol.source.Vector({wrapX: false}),
                            style: new ol.style.Style({
                                fill: new ol.style.Fill({
                                    color: 'rgba(0, 0, 255, 0.2)'
                                }),
                                stroke: new ol.style.Stroke({
                                    color: '#2E9AFE',
                                    width: 2
                                }),
                                image: new ol.style.Circle({
                                    radius: 7,
                                    fill: new ol.style.Fill({
                                        color: '#ffcc33'
                                    })
                                })
                            })
                        });
                        map.addLayer(drawingLayer);
                        
                        var selectClick = new ol.interaction.Select({
                            condition: ol.events.condition.click,
                            source: drawingLayer.getSource(),
                            layers: [drawingLayer]
                        });
                        
                        
                        var draw;
                        var isDrawingActive = false;

                        /**
                         * Funcion que controla la interaccion con el mapa para 
                         * dibujar areas de interés
                         * @returns {addInteraction}
                         */
                        function addInteraction() {
                            geometryFunction = function (coordinates, geometry) {
                                if (!geometry) {
                                    geometry = new ol.geom.Polygon(null);
                                }
                                var start = coordinates[0];
                                var end = coordinates[1];
                                geometry.setCoordinates([
                                    [start, [start[0], end[1]], end, [end[0], start[1]], start]
                                ]);
                                return geometry;
                            };
                            draw = new ol.interaction.Draw({
                                source: drawingLayer.getSource(),
                                type: 'LineString',
                                geometryFunction: geometryFunction,
                                maxPoints: 2,
                                layers: [drawingLayer]
                            });
                            map.addInteraction(draw);
                        }

                        function drawBox() {

                           selectClick.getFeatures().clear();

                           if (isSelectedActive) {
                               map.removeInteraction(selectClick);
                               isSelectedActive = false;
                           }

                           isDrawingActive = !isDrawingActive;
                           if (!isDrawingActive) {
                               map.on('singleclick', singleclickFunction);// activo captura de puntos para mostrar datos
                               map.removeInteraction(draw); //elimino interaccion que dibuja figuras
                               //alert("Dibujar figuras desactivado");
                           } else {
                               map.un('singleclick', singleclickFunction);// desactivo captura de puntos para mostrar datos
                               addInteraction(); //agrego interaccion que dibuja figuras
                               //alert("Dibujar figuras activado");
                           }
                        }
                        
                        /**
                        * Seleccionar areas
                        */
                        var select = null;
                        var isSelectedActive = false;

                        
                        
                        selectClick.on('select', function (evt) {
                            var selected = evt.selected;
                            var deselected = evt.deselected;

                            if (selected.length) {
                                selected.forEach(function (feature) {
                                    //console.info("SELECCIONADO");
                                    //console.info(feature.getGeometry().getCoordinates());
                                    var coordinates = feature.getGeometry().getCoordinates()[0];

                                    if (coordinates.length) {
                                        var coord = "Es poligono: \n"
                                                + "1." + coordinates[0] + "\n"
                                                + "2." + coordinates[1] + "\n"
                                                + "3." + coordinates[2] + "\n"
                                                + "4." + coordinates[3] + "\n"
                                                + "5." + coordinates[4] + "\n";
                                        alert(coord);
                                    }
                                });
                            } else {
                                deselected.forEach(function (feature) {
                                //console.info("NO SELECCIONADO");
                                //console.info(feature);

                                });
                            }
                        });

                        function selectFeatures() {
                            if (isDrawingActive) {
                                map.removeInteraction(draw);
                                isDrawingActive = false;
                            }
                            isSelectedActive = !isSelectedActive;
                            if (!isSelectedActive) {
                                map.removeInteraction(selectClick); //elimino la interaccion del cursor con los puntos
                                map.on('singleclick', singleclickFunction);
                                map.on('pointermove', pointermoveFunction);
                                //alert("Seleccionar figuras desactivado");
                            } else {
                                map.un('singleclick', singleclickFunction);
                                map.un('pointermove', pointermoveFunction);//agrego la interaccion del cursor con los puntos
                                map.addInteraction(selectClick);
                                //alert("Seleccionar figuras activado");
                            }
                        }
                        
                        
                        
                        

                        /*
                         * PUNTERO (EVENTO QUE SE EJECUTA AL PASAR EL PUNTERO SOBRE LOS PUNTOS GEOCODIFICADOS)
                         * @type String
                         */
                        var cursorHoverStyle = "pointer";
                        var target = map.getTarget();

                        //target returned might be the DOM element or the ID of this element dependeing on how the map was initialized
                        //either way get a jQuery object for it
                        var jTarget = typeof target === "string" ? $("#" + target) : $(target);

                        var pointermoveFunction = function (event) {
                            var mouseCoordInMapPixels = [event.originalEvent.offsetX, event.originalEvent.offsetY];

                            //detect feature at mouse coords
                            var hit = map.forEachFeatureAtPixel(mouseCoordInMapPixels, function (feature, layer) {
                                return true;
                            });

                            if (hit &amp;&amp; points.getVisible() &amp;&amp; !heatmap.getVisible()) {
                                jTarget.css("cursor", cursorHoverStyle);
                            } else {
                                jTarget.css("cursor", "");
                            }
                        };

                        map.on("pointermove", pointermoveFunction);

                        /*
                         * Limpiar capa de areas
                         */
                        function clearLayer() {
                            selectClick.getFeatures().clear();
                            drawingLayer.getSource().clear();
                        }

                        


                    </script>
                </p:outputPanel>
                <!-- DIVISION QUE ACTUALIZA LOS DATOS VISUALIZADOS -->
                <p:outputPanel id="panelUpdateMapData">
                    <script type="text/javascript">
                        /**
                         * MAPA DE PUNTOS
                         * @type ol.layer.Vector
                         */
                        
                        var data = #{injuriesCountMB.loadGeoJSON()};
                        
                        var dataSource = new ol.source.Vector({
                            features: (new ol.format.GeoJSON()).readFeatures(data)
                        });

                        var points = new ol.layer.Vector({
                            title: 'Puntos',
                            source: dataSource,
                            style: new ol.style.Style({
                                image: new ol.style.Icon({
                                    anchor: [190, 370],
                                    anchorXUnits: 'pixels',
                                    anchorYUnits: 'pixels',
                                    src: '../../resources/geocoder/img/location_icon-1.png',
                                    scale: 0.10
                                })
                            }),
                            visible: true
                        });

                        /**
                         * MAPA DE CALOR
                         * @type ol.layer.Group
                         */
                        var heatmap = new ol.layer.Heatmap({
                            title: 'Heatmap',
                            source: dataSource,
                            visible: true,
                            blur: 10,
                            radius: 10
                        });
                        
                        
                        /**
                         * GRUPOS DE CAPAS PARA LAYERSWITCHER
                         * @type ol.layer.Group
                         */
                        pointsOverlay = new ol.layer.Group({
                            title: 'Capas de Datos',
                            layers: [points]
                        });

                        heatmapOverlay = new ol.layer.Group({
                            title: 'Capas de Datos',
                            layers: [heatmap]
                        });
                        
                    </script>
                    
                </p:outputPanel>
                
                <!-- DIVISION QUE CARGA LA CAPA QUE SE HA SELECCIONADO VISUALIZAR -->
                <p:outputPanel id="panelUpdateOverlays">
                   
                    
                    <script type="text/javascript">
                        
                        
                        
                        function loadOverlays(showMap, mapType){
                            if (showMap &amp;&amp; mapType !== '') {
                                if (mapType === 'points') {
                                    map.removeLayer(heatmapOverlay);
                                    map.addLayer(pointsOverlay);
                                    } else 
                                        if (mapType === 'heatmap') {
                                            map.removeLayer(pointsOverlay);
                                            map.addLayer(heatmapOverlay);
                                        }
                                } else
                                    if (!showMap) {
                                        //eliminar/remover mapas
                                    }
                        }
                        
                        loadOverlays(#{injuriesCountMB.showAddressesMap}, '#{injuriesCountMB.mapType}');
                    </script>
                </p:outputPanel>

            </ui:define>

            <!-- PANEL IZQUIERDO -->
            <ui:define name="leftPanel">
                <p:layoutUnit position="east" size="36%">
                    <p:tabView style="height: 99%;">
                        <!-- PESTAÑA DE CONFIGURACIONES -->
                        <p:tab title="Configuraciones">
                            <p:fieldset legend="Categorias disponibles" >

                                <h:panelGroup layout="block" style="margin: 10px 0px 20px 100px;">
                                    <p:selectOneMenu id="category" value="#{injuriesCountMB.selectedCategoryForInjuries}">
                                        <f:selectItem itemLabel="Casos por Lesión no fatal" itemValue="3"/>
                                        <f:selectItem itemLabel="Lesiones No Intencionales" itemValue="47"/>
                                        <f:selectItem itemLabel="Violencia AutoInflingida" itemValue="54"/>
                                        <f:selectItem itemLabel="Lesiones en Accidentes de transito" itemValue="40"/>
                                        <f:selectItem itemLabel="Violencia Interpersonal en Familia" itemValue="33"/>
                                        <f:selectItem itemLabel="Violencia Interpersonal en Comunidad" itemValue="61"/>
                                        <f:ajax 
                                            event="change"
                                            listener="#{injuriesCountMB.changeVariableForAddresses()}"
                                            render="IdBtnRemove IdBtnAdd IdBtnOptions IdSelectOneListVariables IdSelectOneListCrossVariables :formInjuries:msg"/>
                                    </p:selectOneMenu>
                                </h:panelGroup>

                            </p:fieldset>
                            <br/>
                            <p:fieldset legend="Rango de fechas">
                                <h:panelGroup layout="block" style="margin: 10px 0px 20px 10px;">

                                    <p:panelGrid styleClass="rangeDateGrid" >
                                        <p:row>
                                            <p:column>
                                                Fecha inicial:
                                            </p:column>    
                                            <p:column>
                                                Fecha final:
                                            </p:column>
                                        </p:row>
                                        <p:row>
                                            <p:column>
                                                <p:calendar
                                                    id="IdInitialDate"
                                                    value="#{injuriesCountMB.initialDate}" 
                                                    locale="es"                                       
                                                    converterMessage="La fecha inicial no es válida, por favor corríjala." 
                                                    showOn="button" 
                                                    pattern="dd/MM/yyyy">
                                                    <f:ajax 
                                                        event="change"
                                                        listener="#{injuriesCountMB.changeDateRange}"
                                                        render="IdSelectOneListCrossVariables IdBtnRemove IdBtnAdd IdBtnOptions"/>
                                                </p:calendar>

                                            </p:column>    
                                            <p:column>
                                                <p:calendar 
                                                    id="IdEndDate"
                                                    value="#{injuriesCountMB.endDate}" 
                                                    converterMessage="La fecha final no es válida, por favor corríjala." 
                                                    showOn="button" 
                                                    pattern="dd/MM/yyyy">
                                                    <f:ajax 
                                                        event="change"
                                                        listener="#{injuriesCountMB.changeDateRange}"
                                                        render="IdSelectOneListCrossVariables IdBtnRemove IdBtnAdd IdBtnOptions"/>
                                                </p:calendar>

                                            </p:column>
                                        </p:row>
                                    </p:panelGrid>
                                    &nbsp;
                                    <h:selectBooleanCheckbox value="#{injuriesCountMB.sameRangeLimit}"/>
                                    <h:outputText value=" Limitar a rangos similares" />


                                </h:panelGroup>
                            </p:fieldset>
                            <br/>
                            <p:fieldset legend="Variables a cruzar">
                                <p:panelGrid style="margin: 15px 0px 20px 0px;">
                                    <p:row>
                                        <p:column styleClass="ui-widget-header">
                                            Variables disponibles                                            
                                        </p:column>    
                                        <p:column styleClass="ui-widget-header">

                                        </p:column>    
                                        <p:column styleClass="ui-widget-header">
                                            Variables a cruzar
                                        </p:column>    
                                    </p:row>
                                    <p:row>
                                        <p:column>

                                            <h:selectManyListbox 
                                                id="IdSelectOneListVariables" 
                                                value="#{injuriesCountMB.currentVariablesSelected}"
                                                style="height:80px; width: 160px;"
                                                converterMessage="Fallo de comunicación, por favor intente nuevamente.">
                                                <f:selectItems value="#{injuriesCountMB.variablesList}"/>                                                                                                
                                                <f:ajax 
                                                    event="change"
                                                    listener="#{injuriesCountMB.changeVariable}"
                                                    render="IdBtnRemove IdBtnAdd IdBtnOptions"/>
                                                <f:ajax 
                                                    event="dblclick"
                                                    listener="#{injuriesCountMB.addVariableClick}"                                                    
                                                    render="IdSelectOneListVariables IdSelectOneListCrossVariables  IdBtnRemove IdBtnAdd IdBtnOptions :formInjuries:msg"/>
                                            </h:selectManyListbox> 

                                        </p:column>
                                        <p:column>

                                            <p:commandButton 

                                                style="width: 20px;"
                                                id="IdBtnAdd" 
                                                icon="ui-icon-arrowthick-1-e"                                            
                                                disabled="#{injuriesCountMB.btnAddVariableDisabled}"
                                                actionListener="#{injuriesCountMB.addVariableClick}"  
                                                update="IdSelectOneListVariables IdSelectOneListCrossVariables IdBtnRemove IdBtnAdd IdBtnOptions :formInjuries:msg"/> 

                                            <br/>
                                            <p:commandButton 

                                                style="width: 20px;"
                                                id="IdBtnRemove" 
                                                icon="ui-icon-arrowthick-1-w"                                            
                                                disabled="#{injuriesCountMB.btnRemoveVariableDisabled}"
                                                actionListener="#{injuriesCountMB.removeVariableClick}"  
                                                update="IdSelectOneListVariables IdSelectOneListCrossVariables IdBtnRemove IdBtnAdd IdBtnOptions :formInjuries:msg"/> 

                                            <br/>
                                            <p:commandButton

                                                style="width: 20px;"
                                                id="IdBtnOptions" 
                                                icon="ui-icon-wrench"
                                                disabled="#{injuriesCountMB.btnRemoveVariableDisabled}"
                                                actionListener="#{injuriesCountMB.btnLoadConfigurationClick}"
                                                oncomplete="configurationsDialog.show();"
                                                update="IdSelectOneListVariables  IdSelectOneListCrossVariables IdBtnRemove IdBtnAdd IdBtnOptions :formInjuries:IdForm2:IdConfigurationsList :formInjuries:msg"/>

                                        </p:column>
                                        <p:column>
                                            <h:selectManyListbox 
                                                id="IdSelectOneListCrossVariables" 
                                                value="#{injuriesCountMB.currentVariablesCrossSelected}"
                                                style="height:80px; width: 160px;"
                                                converterMessage="Fallo de comunicación, por favor intente nuevamente.">
                                                <f:selectItems value="#{injuriesCountMB.variablesCrossList}"/>                                                            
                                                <f:ajax 
                                                    event="change"                                                                                                           
                                                    listener="#{injuriesCountMB.changeCrossVariable}" 
                                                    render="IdBtnRemove IdBtnAdd IdBtnOptions :formInjuries:IdForm2:IdConfigurationsDialog"/>
                                                <f:ajax 
                                                    event="dblclick"
                                                    listener="#{injuriesCountMB.removeVariableClick}"                                                    
                                                    render="IdSelectOneListVariables IdSelectOneListCrossVariables IdBtnRemove IdBtnAdd IdBtnOptions :formInjuries:msg"/>
                                            </h:selectManyListbox> 

                                        </p:column>
                                    </p:row>

                                </p:panelGrid>
                            </p:fieldset>
                            <br/>
                            <p:fieldset>

                                <!-- BOTONES DE CREACION/REINICIO DE MAPA -->
                                <h:panelGroup layout="block" style="margin: 4px 0px 4px 90px;">
                                    <p:commandButton 
                                        value="Generar mapa" 
                                        style="width: 100px;"
                                        id="IdBtnGenerate" 
                                        actionListener="#{injuriesCountMB.processAddressCountIndicators()}"
                                        oncomplete="pageActive1();"  
                                        onclick="pageInactive1();"                                                        
                                        update=":formInjuries:panelUpdateOverlays :formInjuries:panelUpdateMapData :formInjuries:msg"
                                        />
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    <p:commandButton 
                                        value="Reiniciar" 
                                        style="width: 100px;"
                                        id="IdBtnReset" 
                                        actionListener="#{injuriesCountMB.reset}"  
                                        oncomplete="pageActive1();"
                                        onclick="pageInactive1();"
                                        update=":formInjuries :formInjuries:msg"
                                        />
                                </h:panelGroup>
                            </p:fieldset>

                        </p:tab>
                        <!-- PESTAÑA DE RESULTADOS-->
                        <p:tab title="Resultados">
                            <p:fieldset legend="Información" >

                            </p:fieldset>
                            <p:fieldset legend="Gráficos" >

                            </p:fieldset>

                        </p:tab>


                    </p:tabView>
                </p:layoutUnit>

            </ui:define>

            <!--Dialogos de configuracion de variables-->

            <ui:define name="dialogs">
                <h:form id="IdForm2">
                    <p:dialog                     
                        id="IdSaveConfigurationsDialog"  
                        modal="true"
                        header="Guardar configuración"
                        resizable="false"                    
                        widgetVar="saveConfigurationDialog">  
                        <br/>                    
                        Nombre para La configuración
                        <br/>                    
                        <br/>
                        <h:inputText                         
                            value="#{injuriesCountMB.newConfigurationName}" 
                            size="70"/>
                        <br/>
                        <br/>
                        <p:commandButton                                                            
                            value="Guardar"
                            style="margin:0;"
                            oncomplete="saveConfigurationDialog.hide()"
                            actionListener="#{injuriesCountMB.btnSaveConfigurationClick}"
                            update="IdConfigurationsList :formInjuries:msg"/>
                        <br/>
                        <br/>
                    </p:dialog>
                    <p:dialog 
                        id="IdOpenConfigurationsDialog"  
                        modal="true"
                        header="Cargar configuración"         
                        resizable="false"                    
                        widgetVar="openConfigurationDialog">  
                        <br/>
                        <h:selectManyListbox 
                            id="IdConfigurationsList"
                            value="#{injuriesCountMB.currentConfigurationSelected}"
                            style="height:110px; width: 360px;"
                            converterMessage="Fallo de comunicación, por favor intente nuevamente.">
                            <f:selectItems value="#{injuriesCountMB.configurationsList}"/>
                        </h:selectManyListbox>
                        <br/>
                        <br/>
                        <p:commandButton                                                            
                            value="Cargar"
                            style="margin:0;"
                            oncomplete="openConfigurationDialog.hide()"
                            actionListener="#{injuriesCountMB.btnOpenConfigurationClick}"
                            update="IdSelectManyListCategoryValues IdConfigurationsList :formInjuries:msg"/>
                        <p:commandButton                                                            
                            value="Eliminar"
                            style="margin:0;"                        
                            oncomplete="openConfigurationDialog.hide()"
                            actionListener="#{injuriesCountMB.btnRemoveConfigurationClick}"
                            update="IdSelectManyListCategoryValues IdConfigurationsList :formInjuries:msg"/>  
                        <br/>
                        <br/>

                    </p:dialog>
                    <p:dialog 
                        id="IdConfigurationsDialog"  
                        modal="true"
                        header="Configuración de variable: #{injuriesCountMB.firstVariablesCrossSelected}"         
                        resizable="false"                    
                        widgetVar="configurationsDialog">  
                        <br/>
                        <p:panelGrid rendered="#{!injuriesCountMB.btnAddCategoricalValueDisabled}">
                            <p:row>
                                <p:column styleClass="ui-widget-header">
                                    Nueva categoria
                                </p:column>
                            </p:row>
                            <p:row>
                                <p:column>
                                    Valor inicial &nbsp;
                                    <h:inputText 
                                        id="IdA" 
                                        disabled="#{injuriesCountMB.btnAddCategoricalValueDisabled}"
                                        value="#{injuriesCountMB.initialValue}" 
                                        maxlength="4" 
                                        size="4"/>
                                    &nbsp; &nbsp;                                 
                                    Valor Final &nbsp;                                
                                    <h:inputText 
                                        id="IdB" 
                                        disabled="#{injuriesCountMB.btnAddCategoricalValueDisabled}"
                                        value="#{injuriesCountMB.endValue}" 
                                        maxlength="4" 
                                        size="4"/>
                                    &nbsp; &nbsp;
                                    <p:commandButton                        
                                        id="IdBtnAddCategory"
                                        value="Agregar"
                                        style="margin:0;"
                                        disabled="#{injuriesCountMB.btnAddCategoricalValueDisabled}"
                                        actionListener="#{injuriesCountMB.btnAddCategoricalValueClick}"
                                        update="IdSelectManyListCategoryValues :formInjuries:msg IdA IdB"/>  

                                </p:column>
                            </p:row>
                        </p:panelGrid>
                        <br/>
                        <p:panelGrid>
                            <p:row>
                                <p:column styleClass="ui-widget-header">
                                    Categorias actuales    
                                </p:column>
                            </p:row>

                            <p:row>
                                <p:column>
                                    <h:selectManyListbox 
                                        id="IdSelectManyListCategoryValues" 
                                        value="#{injuriesCountMB.currentCategoricalValuesSelected}"
                                        style="height:110px; width: 360px;"
                                        converterMessage="Fallo de comunicación, por favor intente nuevamente.">
                                        <f:selectItems value="#{injuriesCountMB.currentCategoricalValuesList}"/>                                                                                                

                                    </h:selectManyListbox>
                                    <br/>
                                    <br/>
                                    <p:commandButton                        
                                        id="IdBtnRemoveCategory"
                                        value="Quitar"
                                        style="margin:0;"                                    
                                        actionListener="#{injuriesCountMB.btnRemoveCategoryValueClick}"                                                
                                        update="IdBtnRemoveCategory IdSelectManyListCategoryValues"/>  
                                    <p:commandButton                        
                                        id="IdBtnResetCategory"
                                        rendered="false"
                                        value="Reiniciar"
                                        style="margin:0;"                                                
                                        actionListener="#{injuriesCountMB.btnResetCategoryListClick}"                                                
                                        update="IdBtnRemoveCategory IdSelectManyListCategoryValues"/>  
                                    <p:commandButton   
                                        rendered="#{loginMB.userSystem}"
                                        value="Guardar"
                                        style="margin:0;"
                                        onclick="saveConfigurationDialog.show();"/>  
                                    <p:commandButton                                                            
                                        value="Cargar/Eliminar"
                                        rendered="#{loginMB.userSystem}"
                                        style="margin:0;"                    
                                        oncomplete="openConfigurationDialog.show()"/>  
                                    <br/>
                                    <br/>
                                </p:column>
                            </p:row>
                        </p:panelGrid>
                        <br/>
                        <br/>                    
                    </p:dialog>
                </h:form>

            </ui:define>

        </ui:composition>


    </body>
</html>